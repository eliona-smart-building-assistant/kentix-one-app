openapi: 3.0.3

#  This file is part of the eliona project.
#  Copyright Â© 2022 LEICOM iTEC AG. All Rights Reserved.
#  ______ _ _
# |  ____| (_)
# | |__  | |_  ___  _ __   __ _
# |  __| | | |/ _ \| '_ \ / _` |
# | |____| | | (_) | | | | (_| |
# |______|_|_|\___/|_| |_|\__,_|
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
#  BUT NOT LIMITED  TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#  NON INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
#  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

info:
  version: 1.0.0
  title: KentixONE app API
  description: API to access and configure the KentixONE app
externalDocs:
  description: Find out more about the KentixONE app
  url: https://github.com/eliona-smart-building-assistant/kentix-one-app
servers:
  - url: http://kentix-one/v1

tags:
  - name: Configuration
    description: Configure access to KentixONE devices
    externalDocs:
      url: https://github.com/eliona-smart-building-assistant/kentix-one-app

paths:
  /configs:
    get:
      tags:
        - Configuration
      summary: Get all KentixONE configurations
      description: Gets information about all KentixONE configurations
      operationId: getConfigurations
      responses:
        "200":
          description: Successfully returned configured KentixONE configurations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Configuration"
    post:
      tags:
        - Configuration
      summary: Creates a KentixONE configuration
      description: Creates a KentixONE configuration.
      operationId: postConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Configuration"
      responses:
        "201":
          description: Successfully created a new KentixONE configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configuration"
  /configs/{config-id}:
    get:
      tags:
        - Configuration
      summary: Get KentixONE configuration
      description: Gets information about the KentixONE configuration with the given id
      parameters:
        - $ref: "#/components/parameters/config-id"
      operationId: getConfigurationById
      responses:
        "200":
          description: Successfully returned KentixONE configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configuration"
        "400":
          description: Bad request
    put:
      tags:
        - Configuration
      summary: Updates a KentixONE configuration
      description: Updates a KentixONE configuration
      parameters:
        - $ref: "#/components/parameters/config-id"
      operationId: putConfigurationById
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Configuration"
      responses:
        "200":
          description: Successfully updated a KentixONE configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Configuration"
    delete:
      tags:
        - Configuration
      summary: Deletes a KentixONE configuration
      description: Removes information about the KentixONE configuration with the given id
      parameters:
        - $ref: "#/components/parameters/config-id"
      operationId: deleteConfigurationById
      responses:
        "204":
          description: Successfully deleted configured KentixONE configuration
        "400":
          description: Bad request

  /dashboard-template-names:
    get:
      tags:
        - Customization
      summary: List available dashboard templates
      description: Delivers all names for which the app provides dashboard templates
      operationId: getDashboardTemplateNames
      responses:
        "200":
          description: Successfully returned list of template names
          content:
            application/json:
              schema:
                description: Names of available dashboard templates
                type: array
                items:
                  description: Name of the dashboard template
                  type: string

  /dashboard-templates/{dashboard-template-name}:
    get:
      tags:
        - Customization
      summary: Get a full dashboard template
      description: Delivers a dashboard template that can be assigned to users in Eliona
      externalDocs:
        description: The API to assign the dashboard to users in Eliona (see POST /dashboards endpoint)
        url: https://github.com/eliona-smart-building-assistant/eliona-api
      operationId: getDashboardTemplateByName
      parameters:
        - name: dashboard-template-name
          in: path
          description: Name of the dashboard template
          required: true
          schema:
            type: string
            example: KentixONE devices
        - name: projectId
          in: query
          description: Define the project the dashboard should be
          required: true
          schema:
            type: string
            example: 99
      responses:
        "200":
          description: Successfully returned dashboard template
          content:
            application/json:
              schema:
                $ref: "https://raw.githubusercontent.com/eliona-smart-building-assistant/eliona-api/main/openapi.yaml#/components/schemas/Dashboard"
        "404":
          description: Template name not found

  /version:
    get:
      summary: Version of the API
      description: Gets information about the API version.
      operationId: getVersion
      tags:
        - Version
      responses:
        "200":
          description: Successfully returned the API version.
          content:
            application/json:
              schema:
                type: object
  /version/openapi.json:
    get:
      summary: OpenAPI specification for this API version
      description: Gets specification for this API version as an openapi.json file.
      operationId: getOpenAPI
      tags:
        - Version
      responses:
        "200":
          description: Successfully returned the openapi.json file.
          content:
            application/json:
              schema:
                type: object

components:
  parameters:
    config-id:
      name: config-id
      in: path
      description: The ID of the KentixONE Config
      example: 4711
      required: true
      schema:
        type: integer
        format: int64
        example: 4711

  schemas:
    Configuration:
      type: object
      description: Each configuration defines access to one KentixONE manager device and its satellites.
      properties:
        id:
          type: integer
          format: int64
          description: Internal identifier for the configured device (created automatically).
          readOnly: true
          nullable: true
        address:
          type: string
          format: string
          description: IP or hostname of the KentixONE device
          example: 10.10.10.101
        apiKey:
          type: string
          description: KentixONE API key
        enable:
          type: boolean
          description: Flag to enable or disable fetching from this device
          default: true
          nullable: true
        refreshInterval:
          type: integer
          description: Interval in seconds for collecting data from device
          default: 60
        requestTimeout:
          type: integer
          description: Timeout in seconds
          default: 120
          nullable: true
        assetFilter:
          $ref: "#/components/schemas/AssetFilter"
          nullable: true
          example:
            [
              [{ "parameter": "deviceName", "regex": "Main.*" }, { "parameter": "deviceType", "regex": "110" }],
              [{ "parameter": "macAddress", "regex": "(70:82:0e:12:28:cc|70:56:06:12:.*)" }],
              [{ "parameter": "deviceName", "regex": "Multi.*" }],
            ]
        active:
          type: boolean
          readOnly: true
          description: Set to `true` by the app when running and to `false` when app is stopped
          nullable: true
        projectIDs:
          type: array
          description: List of Eliona project ids for which this device should collect data. For each project id all smart devices are automatically created as an asset in Eliona. The mapping between Eliona is stored as an asset mapping in the KentixONE app.
          nullable: true
          items:
            type: string
          example:
            - "42"
            - "99"

    Device:
      type: object
      description: Each device represents one asset in Eliona.
      properties:
        projectID:
          type: string
          description: The project ID this asset is assigned to
        configuration:
          $ref: "#/components/schemas/Configuration"
        assetID:
          type: integer
          description: Eliona asset ID
          nullable: true
        serialNumber:
          type: string
          description: Serial number reported by the KentixONE device

    AssetFilter:
      type: array
      description: Array of rules combined by logical OR
      items:
        type: array
        description: Array of rules combined by logical AND
        items:
          $ref: "#/components/schemas/FilterRule"

    FilterRule:
      type: object
      description: Asset selection rule. Possible parameters are defined in app's README file.
      properties:
        parameter:
          type: string
          example: "name"
        regex:
          type: string
          example: "^KentixONE.*$"
